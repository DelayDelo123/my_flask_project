---
- name: Развертывание Простого Flask-сайта
  hosts: web_servers
  become: yes # Выполняет задачи с повышением привилегий (как root)
  gather_facts: false # Отключаем сбор фактов для ускорения и избежания некоторых проблем

  vars: # <--- НОВЫЙ БЛОК: Явно указываем интерпретатор Python
    ansible_python_interpreter: /usr/bin/python3

  tasks:
    - name: Убедиться, что python3-apt установлен для модулей Ansible (используя raw)
      raw: sudo apt update && sudo apt install -y python3-apt python3-pip
      args:
        warn: no
      changed_when: false # Эта задача в основном для idempotency, если уже установлено

    - name: Установка модуля python3-six (обход ModuleNotFoundError)
      raw: sudo apt install -y python3-six
      args:
        warn: no
      changed_when: true # Может быть true, если пакет устанавливается впервые

    - name: Обновить системные пакеты (используя raw для обхода проблемы с python3-six)
      raw: sudo apt update && sudo apt upgrade -y && sudo apt autoremove -y
      args:
        warn: no
      changed_when: true

    - name: Установка зависимостей Python и других пакетов (используя raw)
      raw: sudo apt install -y git nginx uwsgi uwsgi-plugin-python3 python3-venv
      args:
        warn: no
      changed_when: true

    - name: Клонирование или обновление репозитория Flask-приложения
      ansible.builtin.git:
        repo: 'https://github.com/DelayDelo123/my_flask_project' # <--- ВАЖНО: ЗАМЕНИТЕ НА СВОЙ РЕПОЗИТОРИЙ!
        dest: '/home/user/my_flask_project' # <--- ПУТЬ К ПРОЕКТУ НА SLAVE-ВМ
        version: master # ИЛИ 'main', как у вас на GitHub
        force: yes
      become_user: user # Клонируем от имени пользователя 'user'

    - name: Изменить владельца директории проекта на www-data (рекурсивно)
      ansible.builtin.file:
        path: /home/user/my_flask_project
        owner: www-data
        group: www-data
        recurse: yes
        state: directory
      # Эта задача выполняется как root (become: yes для плейбука), чтобы изменить владельца на www-data

    - name: Создание директории для временных файлов Ansible (для www-data)
      ansible.builtin.file:
        path: /home/user/my_flask_project/ansible_tmp
        state: directory
        owner: www-data
        group: www-data
        mode: '0755'
      # Убедитесь, что ansible_tmp_path в переменных хоста AWX указывает на /home/user/my_flask_project/ansible_tmp

    - name: Создание виртуального окружения Python
      ansible.builtin.shell: "python3 -m venv /home/user/my_flask_project/venv"
      args:
        creates: /home/user/my_flask_project/venv/bin/pip # Проверяет, существует ли venv
      become_user: www-data # <--- ВАЖНО: теперь создаем venv от www-data

    - name: Установка зависимостей Flask из requirements.txt
      ansible.builtin.pip:
        requirements: "/home/user/my_flask_project/requirements.txt"
        virtualenv: "/home/user/my_flask_project/venv"
      become_user: www-data # <--- ВАЖНО: теперь устанавливаем зависимости от www-data

    - name: Копирование файла конфигурации UWSGI
      ansible.builtin.template:
        src: uwsgi.ini
        dest: "{{ project_root_path }}/uwsgi.ini"
        mode: '0644'
      become_user: www-data # <--- Копируем от www-data
      notify: Перезапустить UWSGI сервис

    - name: Копирование файла конфигурации Nginx
      ansible.builtin.template:
        src: nginx_site.conf.j2
        dest: /etc/nginx/sites-available/flask_app
        mode: '0644'
      notify: Перезагрузить Nginx

    - name: Создание символической ссылки на конфигурацию Nginx
      ansible.builtin.file:
        src: /etc/nginx/sites-available/flask_app
        dest: /etc/nginx/sites-enabled/flask_app
        state: link
      notify: Перезагрузить Nginx

    - name: Удаление ссылки на дефолтную конфигурацию Nginx
      ansible.builtin.file:
        path: /etc/nginx/sites-enabled/default
        state: absent
      notify: Перезагрузить Nginx

    - name: Копирование файла systemd-сервиса UWSGI
      ansible.builtin.template:
        src: flask_app.service.j2
        dest: /etc/systemd/system/flask_app.service
        mode: '0644'
      notify: Перезапустить UWSGI сервис

    - name: Включение и запуск systemd-сервиса UWSGI
      ansible.builtin.systemd:
        name: flask_app
        state: started
        enabled: yes
        daemon_reload: yes

  handlers:
    - name: Перезагрузить Nginx
      ansible.builtin.systemd:
        name: nginx
        state: restarted

    - name: Перезапустить UWSGI сервис
      ansible.builtin.systemd:
        name: flask_app
        state: restarted
        daemon_reload: yes
