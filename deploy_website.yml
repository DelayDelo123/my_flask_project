---
- name: Развертывание Простого Flask-сайта
  hosts: web_servers
  become: yes # Выполняет задачи с повышением привилегий (как root)
  gather_facts: false # Отключаем сбор фактов для ускорения и избежания некоторых проблем

  vars: # <--- Явно указываем интерпретатор Python
    ansible_python_interpreter: /usr/bin/python3
    project_root_path: /home/user/my_flask_project # Объявляем переменную для пути проекта

  tasks:
    - name: Убедиться, что python3-apt установлен для модулей Ansible (используя raw)
      raw: sudo apt update && sudo apt install -y python3-apt python3-pip
      args:
        warn: no
      changed_when: false

    - name: Установка модуля python3-six (обход ModuleNotFoundError)
      raw: sudo apt install -y python3-six
      args:
        warn: no
      changed_when: true

    - name: Обновить системные пакеты (используя raw для обхода проблемы с python3-six)
      raw: sudo apt update && sudo apt upgrade -y && sudo apt autoremove -y
      args:
        warn: no
      changed_when: true

    - name: Установка зависимостей Python и других пакетов (используя raw)
      raw: sudo apt install -y git nginx uwsgi uwsgi-plugin-python3 python3-venv
      args:
        warn: no
      changed_when: true

    - name: Добавление директории проекта в safe.directory Git для пользователя 'user'
      raw: sudo -H -u user git config --global --add safe.directory {{ project_root_path }}
      args:
        warn: no
      changed_when: true

    # --- НОВАЯ ЗАДАЧА ДЛЯ ПРАВ .GIT ---
    - name: Изменение владельца директории .git на 'user' перед Git-операциями
      ansible.builtin.file:
        path: "{{ project_root_path }}/.git"
        owner: user
        group: user
        recurse: yes
        state: directory
      when: "'/home/user/my_flask_project/.git' is exists" # Выполнять только если .git уже существует (для pull)
      # Эта задача должна быть выполнена перед клонированием/обновлением, чтобы у пользователя 'user' были права

    - name: Клонирование или обновление репозитория Flask-приложения (используя raw)
      raw: |
        if [ ! -d {{ project_root_path }}/.git ]; then # Проверяем, существует ли .git, а не вся папка
          sudo -H -u user git clone https://github.com/DelayDelo123/my_flask_project.git {{ project_root_path }} # <--- ЗАМЕНИТЕ НА СВОЙ РЕПОЗИТОРИЙ!
        else
          sudo -H -u user git -C {{ project_root_path }} pull origin master # ИЛИ main
        fi
      args:
        warn: no
      changed_when: true

    - name: Изменить владельца директории проекта на www-data (рекурсивно)
      ansible.builtin.file:
        path: "{{ project_root_path }}"
        owner: www-data
        group: www-data
        recurse: yes
        state: directory
      # Эта задача выполняется после git pull/clone, чтобы установить права для www-data для UWSGI

    - name: Создание директории для временных файлов Ansible (для www-data)
      ansible.builtin.file:
        path: "{{ project_root_path }}/ansible_tmp"
        state: directory
        owner: www-data
        group: www-data
        mode: '0755'

    - name: Создание виртуального окружения Python
      ansible.builtin.shell: "python3 -m venv {{ project_root_path }}/venv"
      args:
        creates: "{{ project_root_path }}/venv/bin/pip"
      become_user: www-data

    - name: Установка зависимостей Flask из requirements.txt
      ansible.builtin.pip:
        requirements: "{{ project_root_path }}/requirements.txt"
        virtualenv: "{{ project_root_path }}/venv"
      become_user: www-data

    - name: Копирование файла конфигурации UWSGI
      ansible.builtin.template:
        src: uwsgi.ini
        dest: "{{ project_root_path }}/uwsgi.ini"
        mode: '0644'
      become_user: www-data
      notify: Перезапустить UWSGI сервис

    - name: Копирование файла конфигурации Nginx
      ansible.builtin.template:
        src: nginx_site.conf.j2
        dest: /etc/nginx/sites-available/flask_app
        mode: '0644'
      notify: Перезагрузить Nginx

    - name: Создание символической ссылки на конфигурацию Nginx
      ansible.builtin.file:
        src: /etc/nginx/sites-available/flask_app
        dest: /etc/nginx/sites-enabled/flask_app
        state: link
      notify: Перезагрузить Nginx

    - name: Удаление ссылки на дефолтную конфигурацию Nginx
      ansible.builtin.file:
        path: /etc/nginx/sites-enabled/default
        state: absent
      notify: Перезагрузить Nginx

    - name: Копирование файла systemd-сервиса UWSGI
      ansible.builtin.template:
        src: flask_app.service.j2
        dest: /etc/systemd/system/flask_app.service
        mode: '0644'
      notify: Перезапустить UWSGI сервис

    - name: Включение и запуск systemd-сервиса UWSGI
      ansible.builtin.systemd:
        name: flask_app
        state: started
        enabled: yes
        daemon_reload: yes

  handlers:
    - name: Перезагрузить Nginx
      ansible.builtin.systemd:
        name: nginx
        state: restarted

    - name: Перезапустить UWSGI сервис
      ansible.builtin.systemd:
        name: flask_app
        state: restarted
        daemon_reload: yes
