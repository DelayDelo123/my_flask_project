---
- name: Развертывание Flask-сайта с Docker Compose
  hosts: web_servers
  become: yes # Выполняет задачи с повышением привилегий (как root)
  gather_facts: false # Отключаем сбор фактов для ускорения

  vars:
    ansible_python_interpreter: /usr/bin/python3
    project_root_path: /home/user/my_flask_project # Путь, куда будет клонирован репозиторий
    app_port: 5000

  tasks:
    - name: Убедиться, что python3-apt установлен и система обновлена (raw)
      raw: sudo apt update && sudo apt install -y python3-apt python3-pip git -y && sudo apt upgrade -y && sudo apt autoremove -y
      args:
        warn: no
      changed_when: true

    - name: Установка Docker (raw)
      raw: |
        sudo apt-get update
        sudo apt-get install ca-certificates curl gnupg lsb-release -y
        sudo mkdir -p /etc/apt/keyrings
        curl -fsSL https://download.docker.com/linux/debian/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
        echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/debian $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
        sudo apt-get update
        sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin -y
      args:
        warn: no
      changed_when: true

    - name: Добавление пользователя 'user' в группу docker
      ansible.builtin.user:
        name: user
        groups: docker
        append: yes
      # Примечание: Для того чтобы изменения группы вступили в силу,
      # текущая SSH-сессия пользователя 'user' должна быть перезапущена.
      # AWX запускает новую сессию для каждой задачи, так что это часто срабатывает.
      # Если нет, то может понадобиться перезагрузить ВМ или явно перезапустить службу docker
      # 'sudo systemctl restart docker' (но это обычно не требуется).

    - name: Удаление существующей директории проекта Flask для чистого клонирования (raw)
      raw: sudo rm -rf {{ project_root_path }}
      args:
        warn: no
      changed_when: true

    - name: Создание директории проекта с владельцем 'user' для клонирования (raw)
      raw: sudo mkdir -p {{ project_root_path }} && sudo chown user:user {{ project_root_path }} && sudo chmod 0755 {{ project_root_path }}
      args:
        warn: no
      changed_when: true

    - name: Клонирование репозитория Flask-приложения (используя raw)
      raw: sudo -H -u user git clone https://github.com/DelayDelo123/my_flask_project.git {{ project_root_path }} # <--- ЗАМЕНИТЕ НА СВОЙ РЕПОЗИТОРИЙ!
      args:
        warn: no
      changed_when: true

    - name: Запуск Docker Compose (сборка и запуск контейнеров)
      # Эта команда запускается от имени пользователя 'user', который теперь является частью группы 'docker'.
      # 'chdir' гарантирует, что команда выполняется в корневой директории вашего проекта,
      # где находятся Dockerfile и docker-compose.yml.
      ansible.builtin.shell: "docker compose up -d --build"
      args:
        chdir: "{{ project_root_path }}" # Важно! Команда docker compose должна быть выполнена в директории проекта.
        warn: no
      become_user: user # Выполнить как пользователь 'user'
      changed_when: true # Всегда считаем, что изменилось, для простоты отладки

    - name: Проверка статуса контейнеров (для отладки, не обязательно в продакшене)
      ansible.builtin.shell: "docker ps"
      args:
        warn: no
      become_user: user
      register: docker_ps_output
      changed_when: false # Эта задача не меняет состояние системы

    - name: Вывод статуса контейнеров
      ansible.builtin.debug:
        var: docker_ps_output.stdout_lines
