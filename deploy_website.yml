---
- name: Развертывание Простого Flask-сайта
  hosts: web_servers
  become: yes # Выполняет задачи с повышением привилегий (как root)
  gather_facts: false # Отключаем сбор фактов для ускорения и избежания некоторых проблем

  vars:
    ansible_python_interpreter: /usr/bin/python3
    project_root_path: /home/user/my_flask_project

  tasks:
    - name: Убедиться, что python3-apt установлен для модулей Ansible (используя raw)
      raw: sudo apt update && sudo apt install -y python3-apt python3-pip
      args:
        warn: no
      changed_when: false

    - name: Установка модуля python3-six (обход ModuleNotFoundError)
      raw: sudo apt install -y python3-six
      args:
        warn: no
      changed_when: true

    - name: Обновить системные пакеты (используя raw для обхода проблемы с python3-six)
      raw: sudo apt update && sudo apt upgrade -y && sudo apt autoremove -y
      args:
        warn: no
      changed_when: true

    - name: Установка зависимостей Python и других пакетов (используя raw)
      raw: sudo apt install -y git nginx uwsgi uwsgi-plugin-python3 python3-venv
      args:
        warn: no
      changed_when: true

    - name: Добавление директории проекта в safe.directory Git для пользователя 'user'
      raw: sudo -H -u user git config --global --add safe.directory {{ project_root_path }}
      args:
        warn: no
      changed_when: true

    # --- ИЗМЕНЕНИЕ ЗДЕСЬ: Возвращаемся к ansible.builtin.file для удаления ---
    - name: Удаление существующей директории проекта Flask для чистого клонирования
      ansible.builtin.file:
        path: "{{ project_root_path }}"
        state: absent
      # Ansible выполнит это с become: yes, то есть как root,
      # что гарантированно удалит директорию, независимо от владельца.

    - name: Создание директории проекта с владельцем 'user' для клонирования (raw)
      raw: sudo mkdir -p {{ project_root_path }} && sudo chown user:user {{ project_root_path }} && sudo chmod 0755 {{ project_root_path }}
      args:
        warn: no
      changed_when: true

    - name: Клонирование репозитория Flask-приложения (используя raw)
      raw: sudo -H -u user git clone https://github.com/DelayDelo123/my_flask_project.git {{ project_root_path }} # <--- ЗАМЕНИТЕ НА СВОЙ РЕПОЗИТОРИЙ!
      args:
        warn: no
      changed_when: true

    - name: Изменить владельца директории проекта на www-data (рекурсивно, после клонирования) (raw)
      raw: sudo chown -R www-data:www-data {{ project_root_path }} && sudo chmod -R 0775 {{ project_root_path }}
      args:
        warn: no
      changed_when: true

    - name: Создание директории для временных файлов Ansible (для www-data) (raw)
      raw: sudo mkdir -p {{ project_root_path }}/ansible_tmp && sudo chown www-data:www-data {{ project_root_path }}/ansible_tmp && sudo chmod 0775 {{ project_root_path }}/ansible_tmp
      args:
        warn: no
      changed_when: true

    - name: Создание виртуального окружения Python (raw)
      raw: sudo -H -u www-data python3 -m venv {{ project_root_path }}/venv
      args:
        warn: no
      changed_when: true

    - name: Установка зависимостей Flask из requirements.txt (raw)
      raw: sudo -H -u www-data {{ project_root_path }}/venv/bin/pip install -r {{ project_root_path }}/requirements.txt
      args:
        warn: no
      changed_when: true

    - name: Копирование файла конфигурации UWSGI
      ansible.builtin.template:
        src: uwsgi.ini
        dest: "{{ project_root_path }}/uwsgi.ini"
        mode: '0644'
      become_user: www-data
      notify: Перезапустить UWSGI сервис

    - name: Копирование файла конфигурации Nginx
      ansible.builtin.template:
        src: nginx_site.conf.j2
        dest: /etc/nginx/sites-available/flask_app
        mode: '0644'
      notify: Перезагрузить Nginx

    - name: Создание символической ссылки на конфигурацию Nginx
      ansible.builtin.file:
        src: /etc/nginx/sites-available/flask_app
        dest: /etc/nginx/sites-enabled/flask_app
        state: link
      notify: Перезагрузить Nginx

    - name: Удаление ссылки на дефолтную конфигурацию Nginx
      ansible.builtin.file:
        path: /etc/nginx/sites-enabled/default
        state: absent
      notify: Перезагрузить Nginx

    - name: Копирование файла systemd-сервиса UWSGI
      ansible.builtin.template:
        src: flask_app.service.j2
        dest: /etc/systemd/system/flask_app.service
        mode: '0644'
      notify: Перезапустить UWSGI сервис

    - name: Включение и запуск systemd-сервиса UWSGI
      ansible.builtin.systemd:
        name: flask_app
        state: started
        enabled: yes
        daemon_reload: yes

  handlers:
    - name: Перезагрузить Nginx
      ansible.builtin.systemd:
        name: nginx
        state: restarted

    - name: Перезапустить UWSGI сервис
      ansible.builtin.systemd:
        name: flask_app
        state: restarted
        daemon_reload: yes
